<span class="irc-date">[0:27]</span> <span class="irc-navy">* snail (~stuart@130.195.179.88) Quit (Ping timeout: 240 seconds)</span><br />
<span class="irc-date">[0:41]</span> <span class="irc-green">* snail (~stuart@130.195.179.88) has joined #duraspace</span><br />
<span class="irc-date">[3:19]</span> <span class="irc-navy">* stuartlewis (~stuartlew@gendiglt02.lbr.auckland.ac.nz) Quit (Quit: stuartlewis)</span><br />
<span class="irc-date">[3:27]</span> <span class="irc-navy">* ksclarke (~kevin@156-56-58-106.dhcp-bl.indiana.edu) Quit (Quit: Leaving.)</span><br />
<span class="irc-date">[4:21]</span> <span class="irc-navy">* scottatm (~scottatm@adhcp136.evans.tamu.edu) Quit (*.net *.split)</span><br />
<span class="irc-date">[4:21]</span> <span class="irc-navy">* ianthe (~ianthe@cowu.be) Quit (*.net *.split)</span><br />
<span class="irc-date">[4:22]</span> <span class="irc-navy">* snail (~stuart@130.195.179.88) Quit (*.net *.split)</span><br />
<span class="irc-date">[4:25]</span> <span class="irc-green">* snail (~stuart@130.195.179.88) has joined #duraspace</span><br />
<span class="irc-date">[4:25]</span> <span class="irc-green">* scottatm (~scottatm@adhcp136.evans.tamu.edu) has joined #duraspace</span><br />
<span class="irc-date">[4:25]</span> <span class="irc-green">* ianthe (~ianthe@cowu.be) has joined #duraspace</span><br />
<span class="irc-date">[6:52]</span> <span class="irc-brown">-card.freenode.net- *** Looking up your hostname...</span><br />
<span class="irc-date">[6:52]</span> <span class="irc-brown">-card.freenode.net- *** Checking Ident</span><br />
<span class="irc-date">[6:52]</span> <span class="irc-brown">-card.freenode.net- *** Found your hostname</span><br />
<span class="irc-date">[6:52]</span> <span class="irc-brown">-card.freenode.net- *** No Ident response</span><br />
<span class="irc-date">[6:52]</span> <span class="irc-green">* DuraLogBot (~PircBot@atlas.duraspace.org) has joined #duraspace</span><br />
<span class="irc-date">[6:52]</span> <span class="irc-green">* Topic is '[Welcome to DuraSpace - This channel is logged - <a href="http://irclogs.duraspace.org/]'">http://irclogs.duraspace.org/]'</a></span><br />
<span class="irc-date">[6:52]</span> <span class="irc-green">* Set by cwilper!ad579d86@gateway/web/freenode/ip.173.87.157.134 on Fri Oct 22 01:19:41 UTC 2010</span><br />
<span class="irc-date">[7:21]</span> <span class="irc-green">* Tonny_DK (~thl@130.226.36.117) has joined #duraspace</span><br />
<span class="irc-date">[8:55]</span> <span class="irc-green">* grahamtriggs (~grahamtri@62.189.56.2) has joined #duraspace</span><br />
<span class="irc-date">[12:35]</span> <span class="irc-green">* alxp (~alxp@PC044.ROBLIB.UPEI.CA) has joined #duraspace</span><br />
<span class="irc-date">[13:17]</span> <span class="irc-green">* mhwood (~mhwood@2001:18e8:3:171:218:8bff:fe2a:56a4) has joined #duraspace</span><br />
<span class="irc-date">[13:17]</span> <span class="irc-navy">* mhwood (~mhwood@2001:18e8:3:171:218:8bff:fe2a:56a4) Quit (Client Quit)</span><br />
<span class="irc-date">[13:18]</span> <span class="irc-green">* mhwood (~mhwood@2001:18e8:3:171:218:8bff:fe2a:56a4) has joined #duraspace</span><br />
<span class="irc-date">[13:36]</span> <span class="irc-green">* ksclarke (~kevin@156-56-58-106.dhcp-bl.indiana.edu) has joined #duraspace</span><br />
<span class="irc-date">[13:51]</span> <span class="irc-green">* neanlos (be90a357@gateway/web/freenode/ip.190.144.163.87) has joined #duraspace</span><br />
<span class="irc-date">[13:59]</span> <span class="irc-brown">-card.freenode.net- *** Looking up your hostname...</span><br />
<span class="irc-date">[13:59]</span> <span class="irc-brown">-card.freenode.net- *** Checking Ident</span><br />
<span class="irc-date">[13:59]</span> <span class="irc-brown">-card.freenode.net- *** Found your hostname</span><br />
<span class="irc-date">[13:59]</span> <span class="irc-brown">-card.freenode.net- *** No Ident response</span><br />
<span class="irc-date">[13:59]</span> <span class="irc-green">* DuraLogBot (~PircBot@atlas.duraspace.org) has joined #duraspace</span><br />
<span class="irc-date">[13:59]</span> <span class="irc-green">* Topic is '[Welcome to DuraSpace - This channel is logged - <a href="http://irclogs.duraspace.org/]'">http://irclogs.duraspace.org/]'</a></span><br />
<span class="irc-date">[13:59]</span> <span class="irc-green">* Set by cwilper!ad579d86@gateway/web/freenode/ip.173.87.157.134 on Fri Oct 22 01:19:41 UTC 2010</span><br />
<span class="irc-date">[14:24]</span> <span class="irc-navy">* Tonny_DK (~thl@130.226.36.117) Quit (Quit: Leaving.)</span><br />
<span class="irc-date">[14:53]</span> <span class="irc-green">* ksclarke (~kevin@156-56-58-106.dhcp-bl.indiana.edu) has joined #duraspace</span><br />
<span class="irc-date">[14:53]</span> <span class="irc-navy">* ksclarke1 (~kevin@156-56-58-106.dhcp-bl.indiana.edu) Quit (Quit: Leaving.)</span><br />
<span class="irc-date">[16:53]</span> <span class="irc-green">* granitize (~Adium@137.149.66.159) has joined #duraspace</span><br />
<span class="irc-date">[16:57]</span> <span class="irc-navy">* ksclarke (~kevin@156-56-58-106.dhcp-bl.indiana.edu) Quit (Quit: Leaving.)</span><br />
<span class="irc-date">[17:59]</span> <span class="irc-green">* ksclarke (~kevin@156-56-58-106.dhcp-bl.indiana.edu) has joined #duraspace</span><br />
<span class="irc-date">[18:04]</span> <span class="irc-navy">* ksclarke (~kevin@156-56-58-106.dhcp-bl.indiana.edu) Quit (Client Quit)</span><br />
<span class="irc-date">[18:04]</span> <span class="irc-green">* ksclarke (~kevin@156-56-58-106.dhcp-bl.indiana.edu) has joined #duraspace</span><br />
<span class="irc-date">[18:40]</span> <span class="irc-green">* grahamtriggs_ (~grahamtri@cpc2-stev6-2-0-cust333.9-2.cable.virginmedia.com) has joined #duraspace</span><br />
<span class="irc-date">[19:06]</span> <span class="irc-green">* tdonohue (~Adium@156-56-59-43.dhcp-bl.indiana.edu) has joined #duraspace</span><br />
<span class="irc-date">[19:10]</span> <span class="irc-green">* tdonohue (~Adium@156-56-59-43.dhcp-bl.indiana.edu) has left #duraspace</span><br />
<span class="irc-date">[19:43]</span> <span class="irc-green">* stuartlewis (~stuartlew@gendiglt02.lbr.auckland.ac.nz) has joined #duraspace</span><br />
<span class="irc-date">[19:55]</span> <span class="irc-navy">* ksclarke (~kevin@156-56-58-106.dhcp-bl.indiana.edu) Quit (Ping timeout: 276 seconds)</span><br />
<span class="irc-date">[19:55]</span> <span class="irc-green">* vhollister (48c88f7e@gateway/web/freenode/ip.72.200.143.126) has joined #duraspace</span><br />
<span class="irc-date">[19:55]</span> <span class="irc-green">* PeterDietz (~PeterDiet@128.146.175.194) has joined #duraspace</span><br />
<span class="irc-date">[19:56]</span> <span class="irc-green">* keithg (~keith-noa@207.138.47.158) has joined #duraspace</span><br />
<span class="irc-date">[19:57]</span> <span class="irc-green">* ksclarke (~kevin@156-56-58-106.dhcp-bl.indiana.edu) has joined #duraspace</span><br />
<span class="irc-date">[19:58]</span> <span class="irc-green">* mdiggory1 (~androirc@184-194-235-65.pools.spcsdns.net) has joined #duraspace</span><br />
<span class="irc-date">[19:58]</span> <span class="irc-black">&lt;PeterDietz&gt; hi all dspace developers meeting in just a few minutes</span><br />
<span class="irc-date">[20:00]</span> <span class="irc-black">&lt;mdiggory1&gt; Suspect many are at code 4 lib?</span><br />
<span class="irc-date">[20:00]</span> <span class="irc-green">* tdonohue (~Adium@156-56-59-43.dhcp-bl.indiana.edu) has joined #duraspace</span><br />
<span class="irc-date">[20:00]</span> <span class="irc-navy">* alxp (~alxp@PC044.ROBLIB.UPEI.CA) Quit (Quit: alxp)</span><br />
<span class="irc-date">[20:00]</span> <span class="irc-black">&lt;PeterDietz&gt; I know tdonohue is at code4lib</span><br />
<span class="irc-date">[20:00]</span> <span class="irc-green">* richardrodgers (~richardro@pool-96-237-109-32.bstnma.fios.verizon.net) has joined #duraspace</span><br />
<span class="irc-date">[20:00]</span> <span class="irc-brick">* tdonohue is lurkingâ€¦from code4lib :)  </span><br />
<span class="irc-date">[20:01]</span> <span class="irc-black">&lt;mdiggory1&gt; Trying to do this from an android phone, should be interesting</span><br />
<span class="irc-date">[20:01]</span> <span class="irc-green">* jefftrimble (~jefftrimb@maag127.maag.ysu.edu) has joined #duraspace</span><br />
<span class="irc-date">[20:01]</span> <span class="irc-black">&lt;PeterDietz&gt; ahh, ok, since many are at code4lib, I'll not do ustream</span><br />
<span class="irc-date">[20:01]</span> <span class="irc-black">&lt;PeterDietz&gt; that might be weird, esp for mobile users, people in auditorium, etc</span><br />
<span class="irc-date">[20:02]</span> <span class="irc-navy">* vhollister (48c88f7e@gateway/web/freenode/ip.72.200.143.126) Quit (Ping timeout: 245 seconds)</span><br />
<span class="irc-date">[20:02]</span> <span class="irc-black">&lt;mdiggory1&gt; Dads</span><br />
<span class="irc-date">[20:02]</span> <span class="irc-black">&lt;PeterDietz&gt; so, let me begin by saying thanks for coming, I want to cover what I like about git. And you all say... but you can do that in SVN, then I rebut and say its even better in git</span><br />
<span class="irc-date">[20:03]</span> <span class="irc-black">&lt;richardrodgers&gt; how much do the shills get paid ;)</span><br />
<span class="irc-date">[20:03]</span> <span class="irc-black">&lt;PeterDietz&gt; ok, so for starters, I created a clone of dspace in git, just for experimentation purposes: its on github <a href="https://github.com/DSpace/DSpace">https://github.com/DSpace/DSpace</a></span><br />
<span class="irc-date">[20:03]</span> <span class="irc-black">&lt;mdiggory1&gt; All I care about is what happens to modules ... ;)</span><br />
<span class="irc-date">[20:04]</span> <span class="irc-black">&lt;PeterDietz&gt; if you're a shill, you've already gotten your fortune cookie with prepared statement, and 20 cent off coupon to your nearest gas/petrol station</span><br />
<span class="irc-date">[20:04]</span> <span class="irc-black">&lt;PeterDietz&gt; if you haven't gotten the fortune cookie, than I imagine that you'll already poke holes in this discussion. here goes</span><br />
<span class="irc-date">[20:04]</span> <span class="irc-black">&lt;PeterDietz&gt; First, I've created a copy of dspace in git.. <a href="https://github.com/DSpace/DSpace">https://github.com/DSpace/DSpace</a></span><br />
<span class="irc-date">[20:05]</span> <span class="irc-black">&lt;mdiggory1&gt; Very nice</span><br />
<span class="irc-date">[20:05]</span> <span class="irc-black">&lt;PeterDietz&gt; if you've got git installed on your machine, you can obtain the code by doing</span><br />
<span class="irc-date">[20:05]</span> <span class="irc-black">&lt;PeterDietz&gt; git clone git://github.com/DSpace/DSpace.git dspace</span><br />
<span class="irc-date">[20:06]</span> <span class="irc-black">&lt;grahamtriggs_&gt; that's just a website - doesn't tell us much about the day to day experience ;)</span><br />
<span class="irc-date">[20:06]</span> <span class="irc-black">&lt;PeterDietz&gt; it will then pack it all up just like svn obtains the code.. but nicer</span><br />
<span class="irc-date">[20:06]</span> <span class="irc-black">&lt;PeterDietz&gt; Cloning into dspace...</span><br />
<span class="irc-date">[20:06]</span> <span class="irc-black">&lt;PeterDietz&gt; remote: Counting objects: 22823, done.</span><br />
<span class="irc-date">[20:06]</span> <span class="irc-black">&lt;PeterDietz&gt; remote: Compressing objects: 100% (5573/5573), done.</span><br />
<span class="irc-date">[20:06]</span> <span class="irc-black">&lt;PeterDietz&gt; remote: Total 22823 (delta 12986), reused 22823 (delta 12986)</span><br />
<span class="irc-date">[20:06]</span> <span class="irc-black">&lt;PeterDietz&gt; Receiving objects: 100% (22823/22823), 23.93 MiB | 273 KiB/s, done.</span><br />
<span class="irc-date">[20:06]</span> <span class="irc-black">&lt;PeterDietz&gt; Resolving deltas: 100% (12986/12986), done.</span><br />
<span class="irc-date">[20:07]</span> <span class="irc-black">&lt;PeterDietz&gt; some smarts going on there, computing diffs for efficient commute across the wire</span><br />
<span class="irc-date">[20:07]</span> <span class="irc-black">&lt;grahamtriggs_&gt; actually, I'm largely sold on the technical merit of git over svn - the big question is how big an impact would it be for us to move away from svn</span><br />
<span class="irc-date">[20:07]</span> <span class="irc-black">&lt;PeterDietz&gt; ohh, worse pain than colonoscopy I imagine, but it would only take a short while</span><br />
<span class="irc-date">[20:08]</span> <span class="irc-black">&lt;PeterDietz&gt; You also have to think of new workflows for how people commit, and how you yourself commit</span><br />
<span class="irc-date">[20:09]</span> <span class="irc-black">&lt;mdiggory1&gt; My concern is what about modules... We are trying to actually separatw apart and maintain an endorsed set of addons.</span><br />
<span class="irc-date">[20:09]</span> <span class="irc-black">&lt;PeterDietz&gt; ..as in, you would clone that to your computer, and in svn you don't make any commits, until its perfect, then you commit back to central server. so your source code spends several days/weeks being blue (visual color of being changed)</span><br />
<span class="irc-date">[20:10]</span> <span class="irc-black">&lt;PeterDietz&gt; ahh, so get to the point where this git discussion becomes relevant to us trying to organize our code, and how this might help that</span><br />
<span class="irc-date">[20:10]</span> <span class="irc-black">&lt;mdiggory1&gt; My current goal is to get stats and discovery back under modules</span><br />
<span class="irc-date">[20:10]</span> <span class="irc-black">&lt;PeterDietz&gt; so in svn you have svn:externals, where you define that a certain folder in the repo is tracked in a different repository..</span><br />
<span class="irc-date">[20:11]</span> <span class="irc-black">&lt;mdiggory1&gt; Likewise make dspace dependent on more of those modules</span><br />
<span class="irc-date">[20:11]</span> <span class="irc-black">&lt;PeterDietz&gt; git has something called submodules, which functions similarly. if you're really keen, you'll learn about git subtree merge, which I'm not discussing now</span><br />
<span class="irc-date">[20:11]</span> <span class="irc-black">&lt;PeterDietz&gt; so you could have:</span><br />
<span class="irc-date">[20:11]</span> <span class="irc-black">&lt;PeterDietz&gt; dspace  dspace-api  dspace-discovery  dspace-jspui  dspace-lni  dspace-oai  dspace-stats  dspace-sword  dspace-xmlui  LICENSE  NOTICE  pom.xml  README</span><br />
<span class="irc-date">[20:11]</span> <span class="irc-black">&lt;mdiggory1&gt; elaborate</span><br />
<span class="irc-date">[20:12]</span> <span class="irc-black">&lt;PeterDietz&gt; maybe dspace, dspace-api, README, pom would all live in github/DSPACE</span><br />
<span class="irc-date">[20:12]</span> <span class="irc-black">&lt;PeterDietz&gt; github/dspace-discovery, github/dspace-jspui, ... could all be seperate repositories</span><br />
<span class="irc-date">[20:13]</span> <span class="irc-black">&lt;PeterDietz&gt; then in github/DSPACE, you add a module: git submodule add dspace-discovery dspace-discovery</span><br />
<span class="irc-date">[20:13]</span> <span class="irc-black">&lt;PeterDietz&gt; git submodule init</span><br />
<span class="irc-date">[20:13]</span> <span class="irc-black">&lt;PeterDietz&gt; git submodule update</span><br />
<span class="irc-date">[20:14]</span> <span class="irc-black">&lt;grahamtriggs_&gt; unless it makes a difference for permissions, I don't see the point in that regard - either it's part of 'core', or it's a dependency on a published artefact, and the source for that artefact is separate</span><br />
<span class="irc-date">[20:14]</span> <span class="irc-black">&lt;mdiggory1&gt; It may possibly work with our current intwllij aporoach</span><br />
<span class="irc-date">[20:16]</span> <span class="irc-black">&lt;PeterDietz&gt; for permissions in git, its somewhat different than svn.. in svn only the "committers" have write access in svn/trunk, so to make a code change, only "we" can do that</span><br />
<span class="irc-date">[20:17]</span> <span class="irc-black">&lt;PeterDietz&gt; in git, it will be that everyone has commit ability to commit locally to their own computer, so think Sue from NASA, if she has a certain fix, she makes it to her codebase, then sort of sends an email that says hey, look at this new feature in my repository</span><br />
<span class="irc-date">[20:17]</span> <span class="irc-black">&lt;mdiggory1&gt; My goal is to get the assembly working on released artifacts, not source, you override a binary artifact by checking out its source.  So separate submodules or repos does sound like it would allow you to pixk and choose</span><br />
<span class="irc-date">[20:17]</span> <span class="irc-black">&lt;PeterDietz&gt; if a "committer" sees that and likes it, they can then pull / merge her change into the github/DSPACE tree</span><br />
<span class="irc-date">[20:18]</span> <span class="irc-navy">* mdiggory1 (~androirc@184-194-235-65.pools.spcsdns.net) Quit (Quit: AndroIRC)</span><br />
<span class="irc-date">[20:18]</span> <span class="irc-green">* mdiggory1 (~androirc@184-194-235-65.pools.spcsdns.net) has joined #duraspace</span><br />
<span class="irc-date">[20:18]</span> <span class="irc-black">&lt;richardrodgers&gt; So PeterDietz : does that manage 'stale' patch better than svn?</span><br />
<span class="irc-date">[20:19]</span> <span class="irc-black">&lt;PeterDietz&gt; Git isn't going to be helpful for swapping out binary artifacts, that might exist in some maven repo. but its a good way to manage source code</span><br />
<span class="irc-date">[20:19]</span> <span class="irc-black">&lt;mdiggory1&gt; True</span><br />
<span class="irc-date">[20:20]</span> <span class="irc-black">&lt;PeterDietz&gt; svn we create a patch by saying svn diff &gt; ds-666.patch</span><br />
<span class="irc-date">[20:21]</span> <span class="irc-black">&lt;PeterDietz&gt; then you get a patch against svn-commit-6023 (trunk at the time).. it becomes stale as time passes, and now trunk is at svn-commit-7000, and now your patch is not able to be run</span><br />
<span class="irc-date">[20:21]</span> <span class="irc-black">&lt;grahamtriggs_&gt; and cross our fingers and hope that it works at either end...</span><br />
<span class="irc-date">[20:22]</span> <span class="irc-black">&lt;PeterDietz&gt; in git, "i think" this works better. Typically git does this recursive replay thing, where you could check out the code to the git-equivalent of svn-6023, apply the patch, then replay history of 6024..7000</span><br />
<span class="irc-date">[20:22]</span> <span class="irc-black">&lt;mhwood&gt; This is why one has to grow a reflex to start the day with 'svn update'</span><br />
<span class="irc-date">[20:22]</span> <span class="irc-black">&lt;mdiggory1&gt; My concern is that wee should be striving to get less enduser modifications happening to core code. We need mire api contracts and lrsd overiding of org.dspace.content.  Whike totally possibke no matter the repo tech. We need to have more guidelines</span><br />
<span class="irc-date">[20:23]</span> <span class="irc-black">&lt;PeterDietz&gt; mark said: "more api contracts", and "less overriding"</span><br />
<span class="irc-date">[20:23]</span> <span class="irc-black">&lt;mdiggory1&gt; Mire = more  lrsd = less</span><br />
<span class="irc-date">[20:23]</span> <span class="irc-black">&lt;mdiggory1&gt; Yhanks</span><br />
<span class="irc-date">[20:23]</span> <span class="irc-black">&lt;grahamtriggs_&gt; from my limited experience, git is much better at accurately merging than svn (branch merging is a massive pain in svn)</span><br />
<span class="irc-date">[20:23]</span> <span class="irc-black">&lt;PeterDietz&gt; mark said: Yankees</span><br />
<span class="irc-date">[20:23]</span> <span class="irc-black">&lt;mdiggory1&gt; Hehe</span><br />
<span class="irc-date">[20:25]</span> <span class="irc-black">&lt;PeterDietz&gt; I'm somewhat with you on saying don't touch dspace-api, however I look at dspace-api, and I think org.dspace.content.Collections.findAll is EXTREMELY inefficient at computing if this user is allowed to submit to a certain collection</span><br />
<span class="irc-date">[20:25]</span> <span class="irc-black">&lt;mdiggory1&gt; Yes goid example</span><br />
<span class="irc-date">[20:26]</span> <span class="irc-black">&lt;mdiggory1&gt; Not that the improvement is needed, it us</span><br />
<span class="irc-date">[20:26]</span> <span class="irc-black">&lt;PeterDietz&gt; doing several queries for each collection, so 3N queries as opposed to 4 queires max.. I might be differant then average user though</span><br />
<span class="irc-date">[20:26]</span> <span class="irc-black">&lt;PeterDietz&gt; so I would check out a local branch.. git checkout -b collection-to-submit-performance</span><br />
<span class="irc-date">[20:27]</span> <span class="irc-navy">* ksclarke (~kevin@156-56-58-106.dhcp-bl.indiana.edu) Quit (Ping timeout: 240 seconds)</span><br />
<span class="irc-date">[20:27]</span> <span class="irc-black">&lt;grahamtriggs_&gt; I'm really not bothered about people touching dspace-api. Simple reality, code has to *evolve* - it's not case of "write a Collection object", "write another Collection to replace it", etc. It really doesn't make that much difference where it happens</span><br />
<span class="irc-date">[20:27]</span> <span class="irc-black">&lt;mdiggory1&gt; Weve discussed needing rearchitecture here and much time has already bern invested</span><br />
<span class="irc-date">[20:27]</span> <span class="irc-black">&lt;PeterDietz&gt; make several commits locally that this is a sweet improvement, finally I push my branch to github, so you all can see it. Then whoever approves/blesses my code can then merge it into master once its been tested</span><br />
<span class="irc-date">[20:28]</span> <span class="irc-black">&lt;PeterDietz&gt; thats a cut and dry example of 100% performance improvement that all would want, so it should evolve the core</span><br />
<span class="irc-date">[20:28]</span> <span class="irc-black">&lt;richardrodgers&gt; So PeterDietz do you find such local or private committing makes you more productive?</span><br />
<span class="irc-date">[20:29]</span> <span class="irc-black">&lt;PeterDietz&gt; you're more likely to take risks with the code, when you have saved snapshots of your progress every two hours or so, as opposed to once a week</span><br />
<span class="irc-date">[20:29]</span> <span class="irc-black">&lt;tdonohue&gt; I've heard (here at code4lib) others say that the local/private committing feature of git is sometimes very useful if you want to "save your changes" locally, without affecting others.</span><br />
<span class="irc-date">[20:30]</span> <span class="irc-black">&lt;tdonohue&gt; so, you may commit locally every day (whether truly complete or not)..and push up to github only once it's "ready" for more eyes.</span><br />
<span class="irc-date">[20:30]</span> <span class="irc-brick">* tdonohue sees that PeterDietz and I are describing the same thing</span><br />
<span class="irc-date">[20:31]</span> <span class="irc-black">&lt;PeterDietz&gt; You have many branches open at once, so you can multitask in the code: <a href="https://picasaweb.google.com/pdietz84/OSULibrariesDSpaceDesigns#5571790014387454498">https://picasaweb.google.com/pdietz84/OSULibrariesDSpaceDesigns#5571790014387454498</a></span><br />
<span class="irc-date">[20:31]</span> <span class="irc-black">&lt;richardrodgers&gt; but of course you could do that and combine local git with central svn</span><br />
<span class="irc-date">[20:31]</span> <span class="irc-black">&lt;mhwood&gt; I really would like to be able to do that, but you can't with SVN.</span><br />
<span class="irc-date">[20:31]</span> <span class="irc-navy">* mdiggory1 (~androirc@184-194-235-65.pools.spcsdns.net) Quit (Read error: Connection reset by peer)</span><br />
<span class="irc-date">[20:31]</span> <span class="irc-black">&lt;grahamtriggs_&gt; although we can have workspaces that allow us to "save our changes" by branching in svn. The key thing here is less about having the capability, but that the management of the git repository is much smoother than svn merging</span><br />
<span class="irc-date">[20:32]</span> <span class="irc-black">&lt;PeterDietz&gt; with svn its doable, sure, but a major pain, you checkout trunk, make a branch for your feature, work there, merge your stuff back into trunk.</span><br />
<span class="irc-date">[20:32]</span> <span class="irc-black">&lt;PeterDietz&gt; the branches all live on the server, so every commit you do touches the central server</span><br />
<span class="irc-date">[20:33]</span> <span class="irc-black">&lt;PeterDietz&gt; one would say the perfomance boost of working offline is useful, such as working on a bus/train/plane/conference-with-spotty-wireless</span><br />
<span class="irc-date">[20:33]</span> <span class="irc-black">&lt;mhwood&gt; The problem is that you wind up needing to have file X be in two repo.s at once, with SVN.  In a DVCS the file is in exactly one repo and you clone it to others.</span><br />
<span class="irc-date">[20:33]</span> <span class="irc-black">&lt;grahamtriggs_&gt; and pushing it off your 'local' repository is a good thing, as it can be accessible from multiple locations and backed up against machine failure - although one neat trick with git is to establish your repository in a DropBox backed folder</span><br />
<span class="irc-date">[20:33]</span> <span class="irc-black">&lt;PeterDietz&gt; however, i find it mostly nice to be able to make stupid mistakes in the code locally that nobody else sees</span><br />
<span class="irc-date">[20:34]</span> <span class="irc-black">&lt;PeterDietz&gt; ohh, i sometimes wish I had dropbox monitoring my NetBeansProjects folder.</span><br />
<span class="irc-date">[20:34]</span> <span class="irc-black">&lt;PeterDietz&gt; I've accidentally typed git checkout -- path/to/newfeature-thats-never-been-committed</span><br />
<span class="irc-date">[20:34]</span> <span class="irc-green">* vhollister (48c88f7e@gateway/web/freenode/ip.72.200.143.126) has joined #duraspace</span><br />
<span class="irc-date">[20:34]</span> <span class="irc-black">&lt;PeterDietz&gt; instead of git add .   ===== git commit -- path/to/feature</span><br />
<span class="irc-date">[20:35]</span> <span class="irc-black">&lt;PeterDietz&gt; ...which immediately and tracelessly deletes every shred of the uncommited file you had instantly with extreme performance</span><br />
<span class="irc-date">[20:36]</span> <span class="irc-black">&lt;PeterDietz&gt; the only way I recovered was by happening to have had netbeans do a diff, which then had that diff still visible in the IDE, however if you touched the code, it would instantly reload the file, and grab the fresh/clean code, so i just hand-typed all the changes</span><br />
<span class="irc-date">[20:36]</span> <span class="irc-black">&lt;PeterDietz&gt; git will probably make your swear, and pound the table a lot for the first while that your learning it</span><br />
<span class="irc-date">[20:36]</span> <span class="irc-black">&lt;grahamtriggs_&gt; I think the answer to that problem is to have TimeMachine enabled, not DropBox!</span><br />
<span class="irc-date">[20:36]</span> <span class="irc-black">&lt;PeterDietz&gt; ...which might be a good thing</span><br />
<span class="irc-date">[20:38]</span> <span class="irc-black">&lt;tdonohue&gt; PeterDietz â€” have you played much with Git &amp; SVN "syncing"?  I've heard this is also possibleâ€¦develop in Git, and eventually sync back to a central SVN.  Not sure how "messy" that gets though.</span><br />
<span class="irc-date">[20:40]</span> <span class="irc-black">&lt;PeterDietz&gt; there are things you could build into either one, such as post-commit hooks, so you could run the gamut of writing a webservice to tweet the last person who modified the code before the most recent commit and tweet them that their precious code had been altered 17% with 12 additions, 3 deletions, with the message "DS-777 Adding SSL detection"</span><br />
<span class="irc-date">[20:40]</span> <span class="irc-black">&lt;PeterDietz&gt; ...or simply also commit/sync the change to svn</span><br />
<span class="irc-date">[20:41]</span> <span class="irc-black">&lt;richardrodgers&gt; Not to dwell on negatives, but how about the maturity of IDE tooling?</span><br />
<span class="irc-date">[20:41]</span> <span class="irc-black">&lt;PeterDietz&gt; I might prefer to just have a server running a cron-task night to have git pull the latest changes from svn</span><br />
<span class="irc-date">[20:41]</span> <span class="irc-black">&lt;PeterDietz&gt; yeah, thats a good point</span><br />
<span class="irc-date">[20:41]</span> <span class="irc-black">&lt;PeterDietz&gt; I'm nervous about doing git commit from any IDE, however I'm perfectly fine doing that for svn through IDE</span><br />
<span class="irc-date">[20:41]</span> <span class="irc-black">&lt;tdonohue&gt; richardrodgers â€” I've heard that Eclipse &amp; IDEA have decent Git pluginsâ€¦but, NetBeans does not.  (this is mostly hearsay though)</span><br />
<span class="irc-date">[20:42]</span> <span class="irc-black">&lt;grahamtriggs_&gt; IntelliJ has built in support (v10 at least) - no idea if it's any good</span><br />
<span class="irc-date">[20:42]</span> <span class="irc-green">* ksclarke (~kevin@156-56-58-106.dhcp-bl.indiana.edu) has joined #duraspace</span><br />
<span class="irc-date">[20:42]</span> <span class="irc-black">&lt;kshepherd&gt; late again, sorry all</span><br />
<span class="irc-date">[20:42]</span> <span class="irc-black">&lt;PeterDietz&gt; netbeans has nbgit plugin, which is good for read access, oracle is working on 1st class git plugin for netbeans</span><br />
<span class="irc-date">[20:42]</span> <span class="irc-black">&lt;grahamtriggs_&gt; <a href="http://code.google.com/p/nbgit/">http://code.google.com/p/nbgit/</a></span><br />
<span class="irc-date">[20:42]</span> <span class="irc-brick">* kshepherd scrolls back</span><br />
<span class="irc-date">[20:43]</span> <span class="irc-black">&lt;PeterDietz&gt; intelliJ just works with git, so you're all safe there committing into git. They're smart people who've figured it out.</span><br />
<span class="irc-date">[20:43]</span> <span class="irc-black">&lt;PeterDietz&gt; However intelliJ always makes a bunch of bunk .iml files everywhere and I get upset so turn it off</span><br />
<span class="irc-date">[20:43]</span> <span class="irc-black">&lt;PeterDietz&gt; ...but then in git you can have a .gitignore file, which allows you the blacklist files from version control</span><br />
<span class="irc-date">[20:44]</span> <span class="irc-green">* mdiggory (~mdiggory@rrcs-74-87-47-100.west.biz.rr.com) has joined #duraspace</span><br />
<span class="irc-date">[20:44]</span> <span class="irc-brick">* tdonohue unfortunately has to head off to next code4lib session.  will catch up with everyone later!</span><br />
<span class="irc-date">[20:44]</span> <span class="irc-black">&lt;mdiggory&gt; ok, I am back without the andriod handicap</span><br />
<span class="irc-date">[20:44]</span> <span class="irc-black">&lt;PeterDietz&gt; so *.iml, *.imp, ... can all be gitignored, and git never things about them again</span><br />
<span class="irc-date">[20:44]</span> <span class="irc-green">* tdonohue (~Adium@156-56-59-43.dhcp-bl.indiana.edu) has left #duraspace</span><br />
<span class="irc-date">[20:44]</span> <span class="irc-brick">* PeterDietz wonders if having full keyboard will improve mdiggory's typo rate</span><br />
<span class="irc-date">[20:45]</span> <span class="irc-black">&lt;mdiggory&gt; so, I'm not adverse to changing to git.</span><br />
<span class="irc-date">[20:45]</span> <span class="irc-black">&lt;PeterDietz&gt; also in the case of dspace code, you can say target/ and all the compiled directories are no longer tracked</span><br />
<span class="irc-date">[20:45]</span> <span class="irc-black">&lt;mdiggory&gt; ratio will be the same, rate will be higher</span><br />
<span class="irc-date">[20:46]</span> <span class="irc-black">&lt;PeterDietz&gt; Paid shill's in the crowd, time to ask the questions</span><br />
<span class="irc-date">[20:47]</span> <span class="irc-black">&lt;mdiggory&gt; So, I want to clarify with an example why it is important to not override core classes...  the problem arises when you are working on creating multiple addons and contending with local customizations made by a client.  There are collisions caused by different groups altering the same file in separate locations.</span><br />
<span class="irc-date">[20:47]</span> <span class="irc-black">&lt;PeterDietz&gt; Or, if anyone else has questions we should discuss them</span><br />
<span class="irc-date">[20:47]</span> <span class="irc-black">&lt;richardrodgers&gt; So could we make it possible to make our dev enviornment agnostic to a degree? Modules in git or svn?</span><br />
<span class="irc-date">[20:47]</span> <span class="irc-black">&lt;mdiggory&gt; overriding is a problem in a modular environment, so is altering the original source and compiling in your own functionality</span><br />
<span class="irc-date">[20:48]</span> <span class="irc-black">&lt;mdiggory&gt; so for instance, if we need to alter something Item.java in an addon module for dspace, and the client has altered the same class, then modularity goes out the window, differences still need to be merged and maintained</span><br />
<span class="irc-date">[20:49]</span> <span class="irc-black">&lt;mdiggory&gt; richardrodgers: once I do away with dspace-parent, I believe this is totallypossible</span><br />
<span class="irc-date">[20:49]</span> <span class="irc-black">&lt;PeterDietz&gt; I've had it with dpsace/module/custom-api and hoping that its changes got into my compiled takes effect code, so I make all my changes directly to dspace-api, dspace-jspui, dspace-xmlui, ...</span><br />
<span class="irc-date">[20:50]</span> <span class="irc-black">&lt;grahamtriggs_&gt; even if you make it possible to change the functionality without overriding the core class, doesn't mean that you won't have collisions between multiple customizations trying to provide their own implementation</span><br />
<span class="irc-date">[20:50]</span> <span class="irc-black">&lt;mdiggory&gt; grahamtriggs: api contracts and designations of where overriding is possible eases this</span><br />
<span class="irc-date">[20:51]</span> <span class="irc-black">&lt;mdiggory&gt; oftentimes when reviewing someones code, I immediately see ways to do away with the customizations the've made.</span><br />
<span class="irc-date">[20:51]</span> <span class="irc-black">&lt;mhwood&gt; Yes, I gave up using the overlay stuff a long time ago.  It takes away a lot of the value of VCS tools, since they don't know that the same concept is written (slightly differently) in two different places.</span><br />
<span class="irc-date">[20:52]</span> <span class="irc-black">&lt;mdiggory&gt; we extensively use the overlay approach at the moment and it is working fine, we actually track all our own changes to dspace code, and we work to minimize them and utilize the servicemanager and spring to alleviate modifying the core codebase whenever possible</span><br />
<span class="irc-date">[20:53]</span> <span class="irc-black">&lt;PeterDietz&gt; ...so then in spring you register SOLR to be a UsageEventListener, or once you've written your own implementation in mongoDB, you don't edit dspace-stats, but rather register MONGODB as the UsageEventListener</span><br />
<span class="irc-date">[20:53]</span> <span class="irc-black">&lt;mdiggory&gt; but it is not perfect....  and what I am trying to get you guys to pay attention to is not the approach overlay vs alter the code in place, but the architecture and what needs to happen to it to reduce the need to do this</span><br />
<span class="irc-date">[20:54]</span> <span class="irc-black">&lt;mdiggory&gt; PeterDietz: correct, that is one example, but even the EventService / USage Event is not yet fully realized in the core</span><br />
<span class="irc-date">[20:55]</span> <span class="irc-black">&lt;mdiggory&gt; the fact that you need to alter "Collection" to change "findAll" is the big problem here, it is a huge architectural break</span><br />
<span class="irc-date">[20:57]</span> <span class="irc-black">&lt;mdiggory&gt; All the work that James Rutherford did is sitting on the floor "rotting" because of choices that were made... His work was going to save the architecture in this area... it is sooo sadd that this has been lost</span><br />
<span class="irc-date">[20:57]</span> <span class="irc-black">&lt;mhwood&gt; So we are missing some plugin points?</span><br />
<span class="irc-date">[20:57]</span> <span class="irc-black">&lt;mdiggory&gt; the work of Aaron on the service manager was supposed to join with the work James was doing...</span><br />
<span class="irc-date">[20:58]</span> <span class="irc-black">&lt;grahamtriggs_&gt; mdiggory: depends on your circumstances. In many cases it may actually be better to take a 'vendor drop' approach to putting customizations into a local source repository and merging the differences during upgrades. Providing alternate implementations of something via configuration doesn't protect you from having two separate modules that want to replace the same piece of functionality, and that you need a</span><br />
<span class="irc-date">[20:58]</span> <span class="irc-black">&lt;grahamtriggs_&gt; implementation that merges the functionality of both</span><br />
<span class="irc-date">[20:58]</span> <span class="irc-black">&lt;mdiggory&gt; and liberate the data model so you did not need to change it directly to alter storage or search logic</span><br />
<span class="irc-date">[20:59]</span> <span class="irc-brick">* PeterDietz for the record I found that findAll is simply easy, works fine.. its findAuthorized that I've got the performance gripes with, however don't let that be the distraction</span><br />
<span class="irc-date">[20:59]</span> <span class="irc-black">&lt;mdiggory&gt; I don't buy it grahamtriggs_ if you have separate modules agreeing on a common api and data model, the points to integrate become much clearer and its then not a hackfest</span><br />
<span class="irc-date">[21:01]</span> <span class="irc-black">&lt;mdiggory&gt; thnx for correct PeterDietz</span><br />
<span class="irc-date">[21:02]</span> <span class="irc-green">* alxp (~aoneill@blk-30-155-121.eastlink.ca) has joined #duraspace</span><br />
<span class="irc-date">[21:03]</span> <span class="irc-black">&lt;mhwood&gt; So do we need to look over a pile of mod.s that people are having to make, figure out where the APIs fall short, and redesign those areas of high customization desire so they are replaceable or have generally useful callouts or whatnot?</span><br />
<span class="irc-date">[21:03]</span> <span class="irc-black">&lt;mdiggory&gt; we are actually coming up on other problem areas in the API right now,  Bitstream.getParent and other such methods that could stand to not be where they are or implemented in the fashion they are... we are working on Item Versioning for Dryad, and its really stressing the data model in its current incarnation</span><br />
<span class="irc-date">[21:04]</span> <span class="irc-black">&lt;mdiggory&gt; correct mhwood, we need to get back to improving the data model...</span><br />
<span class="irc-date">[21:04]</span> <span class="irc-black">&lt;mdiggory&gt; Will git improve our ability to do this?</span><br />
<span class="irc-date">[21:04]</span> <span class="irc-black">&lt;mdiggory&gt; are we going to get more exposure of changes in local instances?</span><br />
<span class="irc-date">[21:05]</span> <span class="irc-black">&lt;mdiggory&gt; I'm not convinced because that social, not technical</span><br />
<span class="irc-date">[21:06]</span> <span class="irc-black">&lt;mhwood&gt; That's not the only thing we need to work on, though.  Will DVCS help *overall*?</span><br />
<span class="irc-date">[21:07]</span> <span class="irc-black">&lt;mhwood&gt; And yes, I think that a more granular, more open VCS model would help gain visibility over stuff that people don't think is ready (or perhaps appropriate) for the trunk.</span><br />
<span class="irc-date">[21:07]</span> <span class="irc-navy">* jefftrimble (~jefftrimb@maag127.maag.ysu.edu) Quit (Quit: Leaving)</span><br />
<span class="irc-date">[21:08]</span> <span class="irc-black">&lt;mdiggory&gt; that would be helpful...</span><br />
<span class="irc-date">[21:08]</span> <span class="irc-black">&lt;PeterDietz&gt; I was thinking about something from Computer Science 101, where you would say list.sort(), or list.sort(algorithm).. so collection.findAuthorized() might be broke, but what about collection.findAuthorized(locallyCustomizedAlgorithm) ... where locallyCustomizedAlgorithm is in my local codebase edu.osu.kb.Collection as opposed to org.dspace.content.Collection</span><br />
<span class="irc-date">[21:08]</span> <span class="irc-black">&lt;mhwood&gt; The question I have is:  is this the right time to swap VCS models? or will there ever be a right time, as opposed to "get it done and move on"?</span><br />
<span class="irc-date">[21:09]</span> <span class="irc-navy">* vhollister (48c88f7e@gateway/web/freenode/ip.72.200.143.126) Quit (Quit: Page closed)</span><br />
<span class="irc-date">[21:09]</span> <span class="irc-black">&lt;mdiggory&gt; but at the same time, what happens when a "good change" to cleanup something like core impacts alot of those forks</span><br />
<span class="irc-date">[21:09]</span> <span class="irc-black">&lt;grahamtriggs_&gt; imho, the fact that it works better for merging (/pushing/pulling) changes around *will* help, I don't really see that the 'D' part of it makes a big difference overall (even if you wanted to make 'local saves', you could establish a local repository with git from your svn checkout (for example))</span><br />
<span class="irc-date">[21:09]</span> <span class="irc-black">&lt;mdiggory&gt; do we not improve the codesbase because it would just impact too many installations?</span><br />
<span class="irc-date">[21:11]</span> <span class="irc-black">&lt;PeterDietz&gt; I think grahamtriggs' crusade to make all the if { } bracketing line up on a new line would have impacted too many installations, but its definitely worthy of doing</span><br />
<span class="irc-date">[21:11]</span> <span class="irc-black">&lt;mhwood&gt; We announce that the contracts are changing in version X, be forewarned.</span><br />
<span class="irc-date">[21:12]</span> <span class="irc-navy">* granitize (~Adium@137.149.66.159) Quit (Quit: Leaving.)</span><br />
<span class="irc-date">[21:12]</span> <span class="irc-black">&lt;mdiggory&gt; that where I'm happy I wrote a service based solution that didn't need to be merged with his changes...</span><br />
<span class="irc-date">[21:13]</span> <span class="irc-black">&lt;mdiggory&gt; I don't wnat to worry about merging implementations, I just want the api and the architecture to be guarunteed so I can program against it and be buffered from such activities</span><br />
<span class="irc-date">[21:14]</span> <span class="irc-black">&lt;mhwood&gt; I don't get how introducing services makes it unnecessary to ever touch any of the code again.  I must be missing something.</span><br />
<span class="irc-date">[21:14]</span> <span class="irc-black">&lt;mdiggory&gt; a gross generalization... because you write your own implementation...</span><br />
<span class="irc-date">[21:15]</span> <span class="irc-black">&lt;mhwood&gt; The APIs and the architecture *are* guaranteed...until the next major version bump.</span><br />
<span class="irc-date">[21:15]</span> <span class="irc-black">&lt;mdiggory&gt; and because you rely less on common data models</span><br />
<span class="irc-date">[21:15]</span> <span class="irc-black">&lt;grahamtriggs_&gt; and somebody else writes their own implementation... and then you want an implementation that's a bit of both...</span><br />
<span class="irc-date">[21:16]</span> <span class="irc-black">&lt;richardrodgers&gt; I gotta go - many thanks, PeterDietz for your git advocacy</span><br />
<span class="irc-date">[21:16]</span> <span class="irc-black">&lt;mhwood&gt; Is this all just a fancy way of saying that we</span><br />
<span class="irc-date">[21:16]</span> <span class="irc-black">&lt;mhwood&gt; have been lax in hiding what should be internal details?</span><br />
<span class="irc-date">[21:16]</span> <span class="irc-navy">* richardrodgers (~richardro@pool-96-237-109-32.bstnma.fios.verizon.net) Quit (Quit: richardrodgers)</span><br />
<span class="irc-date">[21:16]</span> <span class="irc-black">&lt;grahamtriggs_&gt; I'm not arguing against services - the static 'dao' activity of the data model needs pulling out (for example)... but it's not a panacea. There will still be issues in the real world.</span><br />
<span class="irc-date">[21:17]</span> <span class="irc-black">&lt;PeterDietz&gt; so do we need to ship DSpace with org.dspace.content.CollectionInterface and content.CollectionSimpleImpl so then Mark will wire it up to use content.CollectionAtmireImpl, graham will use content.CollectionBioMedImpl</span><br />
<span class="irc-date">[21:17]</span> <span class="irc-black">&lt;mdiggory&gt; mhwood: correct</span><br />
<span class="irc-date">[21:17]</span> <span class="irc-black">&lt;mdiggory&gt; grahamtriggs_: true but I'd rather have those issues than the current ones</span><br />
<span class="irc-date">[21:18]</span> <span class="irc-black">&lt;mdiggory&gt; PeterDietz: sort of</span><br />
<span class="irc-date">[21:18]</span> <span class="irc-black">&lt;mdiggory&gt; We need to pull the CRUD off the data model so that Collection is just a bean</span><br />
<span class="irc-date">[21:19]</span> <span class="irc-black">&lt;mdiggory&gt; and place it into a SERVICE backed by the DAO</span><br />
<span class="irc-date">[21:19]</span> <span class="irc-black">&lt;mhwood&gt; And then we don't Create, Read, Update, or Delete anything anymore?</span><br />
<span class="irc-date">[21:19]</span> <span class="irc-black">&lt;mdiggory&gt; no, they are an API on the service backed by an implementation</span><br />
<span class="irc-date">[21:20]</span> <span class="irc-black">&lt;kshepherd&gt; we do.. via a collection service, not via the collection entity</span><br />
<span class="irc-date">[21:20]</span> <span class="irc-black">&lt;kshepherd&gt; i think</span><br />
<span class="irc-date">[21:20]</span> <span class="irc-black">&lt;mdiggory&gt; an implementation that is replaceable without hacking dspace-api or using classpath overriding</span><br />
<span class="irc-date">[21:20]</span> <span class="irc-black">&lt;mdiggory&gt; then... you don't need to change that core data model class anymore</span><br />
<span class="irc-date">[21:21]</span> <span class="irc-black">&lt;mdiggory&gt; or, if you do, your implementing a new interface on it</span><br />
<span class="irc-date">[21:23]</span> <span class="irc-black">&lt;mdiggory&gt; TBH.... we lost the GSoC Versioning work when we rejected the rutherford DAO branch and that was actually proving the applicability at that time... but... we all know that branch was a massive set of changes to DSpace</span><br />
<span class="irc-date">[21:24]</span> <span class="irc-black">&lt;mdiggory&gt; IN Dryad we currently have an IdentifierService that starts to replicate the work that was going on in that branch with External Identifiers.  Now we are back at the point where we are considering how to implement Item Versioning... We are starting to realize that DAO work was "pivotal" and very much needed.</span><br />
<span class="irc-date">[21:26]</span> <span class="irc-black">&lt;mdiggory&gt; sorry, not to derail the Git discussion, my concern is the switch will again refocus away from these concerns</span><br />
<span class="irc-date">[21:26]</span> <span class="irc-black">&lt;mhwood&gt; Are there some examples of changes that people need to make which would be no improvement at any other site, or even harmful?  In other words, that couldn't be contributed to stock and that's that, no more patching?</span><br />
<span class="irc-date">[21:28]</span> <span class="irc-black">&lt;mdiggory&gt; I have examples, but I'm not so sure thats a problem...</span><br />
<span class="irc-date">[21:28]</span> <span class="irc-black">&lt;mdiggory&gt; they just keep them to themselves right?</span><br />
<span class="irc-date">[21:28]</span> <span class="irc-black">&lt;PeterDietz&gt; umm, I can think of a local change to collection.findAll, where I did an UPPER(collection.name) to make it case insensitive sorting. So that Octopus, onCampus, Ozzy would be sorted like that</span><br />
<span class="irc-date">[21:28]</span> <span class="irc-black">&lt;PeterDietz&gt; note the lower case onCampus being between capital O</span><br />
<span class="irc-date">[21:29]</span> <span class="irc-black">&lt;mhwood&gt; Shouldn't sorting be done a bit closer to the UI?</span><br />
<span class="irc-date">[21:30]</span> <span class="irc-black">&lt;PeterDietz&gt; yeah i think so, that was a change I made in the first week of the job. However the UI's don't usually get data, they usually get formattedStuff already ready to go.</span><br />
<span class="irc-date">[21:34]</span> <span class="irc-black">&lt;mdiggory&gt; It would be great to identify two or three changes to the codebase that would get us closer to what we are seeking across 2-3 versions of DSpace.</span><br />
<span class="irc-date">[21:35]</span> <span class="irc-black">&lt;mdiggory&gt; IE pull the data access out of DSpaceObjects and deprecate the static methods</span><br />
<span class="irc-date">[21:35]</span> <span class="irc-black">&lt;PeterDietz&gt; enabling the code to be abstractable easily so that an instance does not have to hack-apart the core to make their customization</span><br />
<span class="irc-date">[21:36]</span> <span class="irc-black">&lt;mdiggory&gt; construct services that have those CRUD ops on them</span><br />
<span class="irc-date">[21:37]</span> <span class="irc-black">&lt;mdiggory&gt; move as much of the deprecated usage to the service</span><br />
<span class="irc-date">[21:37]</span> <span class="irc-black">&lt;mdiggory&gt; DSpace.getServiceManager.getService(ItemService.class);</span><br />
<span class="irc-date">[21:38]</span> <span class="irc-black">&lt;mdiggory&gt; is.update(Item i);</span><br />
<span class="irc-date">[21:39]</span> <span class="irc-black">&lt;mdiggory&gt; review JR's DAO's see if we can readopt some of that code....</span><br />
<span class="irc-date">[21:40]</span> <span class="irc-black">&lt;mdiggory&gt; <a href="http://scm.dspace.org/svn/repo/sandbox/dspace-dao-prototype/dspace-api/src/main/java/org/dspace/content/dao/">http://scm.dspace.org/svn/repo/sandbox/dspace-dao-prototype/dspace-api/src/main/java/org/dspace/content/dao/</a></span><br />
<span class="irc-date">[21:40]</span> <span class="irc-black">&lt;PeterDietz&gt; I have a question though. When OSULibraries needs to customize findAll so that we can add case-insensitive ordering (assuming this is something that can't be done at UI level), we make our own implementation that is registered to the Collection bean. Then in our implementation, do we just implement findAll() with our customization, or do I also have to copy/paste the implementation for all the other functions in that class?</span><br />
<span class="irc-date">[21:41]</span> <span class="irc-black">&lt;mhwood&gt; So Item shouldn't be an object; it's just a structure with no behavior?</span><br />
<span class="irc-date">[21:42]</span> <span class="irc-black">&lt;mdiggory&gt; You might just inherit and override</span><br />
<span class="irc-date">[21:42]</span> <span class="irc-black">&lt;mdiggory&gt; oh golly thats novel... you mean actually use OO? Wow...</span><br />
<span class="irc-date">[21:43]</span> <span class="irc-black">&lt;mdiggory&gt; mhwood: the less behavior, the better, its called an anemic data model</span><br />
<span class="irc-date">[21:44]</span> <span class="irc-black">&lt;mdiggory&gt; ok, to bee honest,,, there are trade offs...</span><br />
<span class="irc-date">[21:44]</span> <span class="irc-black">&lt;mdiggory&gt; <a href="http://en.wikipedia.org/wiki/Anemic_Domain_Model">http://en.wikipedia.org/wiki/Anemic_Domain_Model</a></span><br />
<span class="irc-date">[21:44]</span> <span class="irc-black">&lt;mhwood&gt; If an object has behavior that doesn't belong there, isn't it two objects smushed together?</span><br />
<span class="irc-date">[21:52]</span> <span class="irc-black">&lt;mhwood&gt; PeterDietz: there's probably some sneaky way to get Spring to stick purple wires into Collection leading to and from YourCollection.findAll(), if you're experiencing too much performance. :-)</span><br />
<span class="irc-date">[21:54]</span> <span class="irc-black">&lt;mdiggory&gt; <a href="http://tinyurl.com/68yohb5">http://tinyurl.com/68yohb5</a></span><br />
<span class="irc-date">[21:55]</span> <span class="irc-black">&lt;kshepherd&gt; on a complete tangent, solr searches based on search.location:12345 are nice and easy compared to trying to build aggregations of items in java ;)</span><br />
<span class="irc-date">[21:55]</span> <span class="irc-black">&lt;mdiggory&gt; Software development is a lot like building Frankenstienâ€™s monster. You start out with a pile of useless ugly pieces, and try to turn it into something beautiful. Along the way, itâ€™s a monstrosity, and tends to get uglier as you tack new bits onto it. Then it kills people.</span><br />
<span class="irc-date">[21:56]</span> <span class="irc-black">&lt;PeterDietz&gt; ...and then we archive the papers of the dead people into a DSpace repository</span><br />
<span class="irc-date">[21:56]</span> <span class="irc-black">&lt;mdiggory&gt; <a href="http://foohack.com/2008/01/going-fast-frankenstein-and-refactoring/">http://foohack.com/2008/01/going-fast-frankenstein-and-refactoring/</a></span><br />
<span class="irc-date">[21:58]</span> <span class="irc-black">&lt;mdiggory&gt; kshepherd: ain't that the truth...</span><br />
<span class="irc-date">[22:01]</span> <span class="irc-black">&lt;mdiggory&gt; and indexing all the metadata results in a powerful mechanism for both getting a select and sorting it across whatever is put into the repo...  The only place solr falls down is in capturing the data model... no JOINS or searches that span JOINS, means we have to resolve those relationships acorss multiple queries... means we still need a store that maintains such structure.</span><br />
<span class="irc-date">[22:01]</span> <span class="irc-black">&lt;mdiggory&gt; of course, solr wasn't designed for that</span><br />
<span class="irc-date">[22:02]</span> <span class="irc-black">&lt;mdiggory&gt; we still need a relational DB or some other similar tech</span><br />
<span class="irc-date">[22:03]</span> <span class="irc-navy">* alxp (~aoneill@blk-30-155-121.eastlink.ca) Quit (Quit: alxp)</span><br />
<span class="irc-date">[22:05]</span> <span class="irc-navy">* ksclarke (~kevin@156-56-58-106.dhcp-bl.indiana.edu) Quit (Quit: Leaving.)</span><br />
<span class="irc-date">[22:11]</span> <span class="irc-green">* alxp (~aoneill@blk-30-155-121.eastlink.ca) has joined #duraspace</span><br />
<span class="irc-date">[22:14]</span> <span class="irc-black">&lt;mhwood&gt; It's gone quiet and I've gotta go.  Parting shot:  we need something like the relational *model*, but the backend could be novel.</span><br />
<span class="irc-date">[22:14]</span> <span class="irc-green">* mhwood (~mhwood@2001:18e8:3:171:218:8bff:fe2a:56a4) has left #duraspace</span><br />
<span class="irc-date">[22:21]</span> <span class="irc-navy">* neanlos (be90a357@gateway/web/freenode/ip.190.144.163.87) Quit (Ping timeout: 245 seconds)</span><br />
<span class="irc-date">[22:35]</span> <span class="irc-green">* ksclarke (~kevin@156-56-58-106.dhcp-bl.indiana.edu) has joined #duraspace</span><br />
<span class="irc-date">[22:35]</span> <span class="irc-navy">* alxp (~aoneill@blk-30-155-121.eastlink.ca) Quit (Quit: alxp)</span><br />
<span class="irc-date">[22:57]</span> <span class="irc-navy">* snail (~stuart@130.195.179.88) Quit (Ping timeout: 276 seconds)</span><br />
<span class="irc-date">[23:11]</span> <span class="irc-green">* snail (~stuart@130.195.179.88) has joined #duraspace</span><br />
<span class="irc-date">[23:53]</span> <span class="irc-navy">* keithg (~keith-noa@207.138.47.158) Quit (Quit: keithg)</span><br />
<span class="irc-date">[23:56]</span> <span class="irc-navy">* grahamtriggs_ (~grahamtri@cpc2-stev6-2-0-cust333.9-2.cable.virginmedia.com) Quit (Quit: grahamtriggs_)</span><br />
